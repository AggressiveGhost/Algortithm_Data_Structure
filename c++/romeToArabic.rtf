{\rtf1\ansi\ansicpg1252\cocoartf2509
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf0 \uc0\u1056 \u1080 \u1084 \u1089 \u1082 \u1080 \u1081  \u1085 \u1072  \u1072 \u1088 \u1072 \u1073 \u1089 \u1082 \u1080 \u1081 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
#include <iostream>\
#include <string>\
#include <vector>\
#include <algorithm>\
#include <cmath>\
#include<cstring>\
#define NUMS 13\
using namespace std;\
void quickSort(int *array, int low, int high)\
\{\
    int i = low;\
    int j = high;\
    int pivot = array[(i + j) / 2];\
    int temp;\
    \
    while (i <= j)\
    \{\
        while (array[i] < pivot)\
            i++;\
        while (array[j] > pivot)\
            j--;\
        if (i <= j)\
        \{\
            temp = array[i];\
            array[i] = array[j];\
            array[j] = temp;\
            i++;\
            j--;\
        \}\
    \}\
    if (j > low)\
        quickSort(array, low, j);\
    if (i < high)\
        quickSort(array, i, high);\
\}\
\
int asdf(char *lat)\{\
    int count = 0 ;\
    for (int i = 0; i < strlen(lat);i++)\{\
        \
        switch(lat[i])\{\
                \
            case 'M':\
                count += 1000;\
                break;\
            case 'D':\
                count += 500;\
                break;\
            case 'C':\
                \
                if ( i+1 < strlen(lat) && (lat[i + 1] == 'D' || lat[i + 1] == 'M' ) )\
                    count -= 100;\
                else\
                    count += 100;\
                break;\
            case 'L':\
                count += 50;\
                break;\
            case 'X':\
                if (i+1 < strlen(lat) && (lat[i + 1] == 'L' || lat[i + 1] == 'C' || lat[i + 1] == 'M') )\
                    count -= 10;\
                else\
                    count += 10;\
                \
                break;\
            case 'V':\
                count += 5;\
                break;\
            case 'I':\
                if (i+1 < strlen(lat) && (lat[i + 1] == 'V' || lat[i + 1] == 'X' || lat[i + 1] == 'C'))\
                    count -= 1;\
                else count +=1;\
                \
                break;\
        \}\
    \}\
    return count;\
\}\
\
int main ()\{\
    char lat[100];\
    int a[100];\
    int n = 0,i = 0;\
    cin.getline(lat,100);\
    char *token = strtok(lat, " ");\
    while(token != NULL)\{\
        a[i] = asdf(token);\
        token = strtok(NULL, " ");\
        n++;\
        i++;\
    \}\
    quickSort(a,0,n-1);\
    for (int i = 0; i < n; i++)\{\
        cout << a[i] << " ";\
    \}\
    return 0;\
\}\
}